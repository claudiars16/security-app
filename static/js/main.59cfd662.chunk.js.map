{"version":3,"sources":["serviceWorker.js","components/Firebase/context.js","components/Firebase/firebase.js","components/Firebase/index.js","components/SignOut/index.js","constants/routes.js","components/Session/context.js","components/Session/withAuthentication.js","components/Session/withAuthorization.js","components/Navigation/index.js","components/Landing/index.js","components/form-input/form-input.component.jsx","components/custom-button/custom-button.component.jsx","components/SignUp/index.js","components/PasswordForget/index.js","components/SignIn/index.js","components/Home/index.js","components/PasswordChange/index.js","components/Account/index.js","components/Admin/index.js","components/QuizGame/Answer.jsx","components/QuizGame/Question.jsx","components/QuizGame/QuestionList.jsx","components/QuizGame/Quiz.jsx","components/QuizGame/Modal.jsx","helpers/tally.js","components/QuizGame/Result.jsx","helpers/shuflleQuestions.js","data/quiz-data.jsx","components/QuizGame/QuizApp.jsx","components/App/index.js","index.js"],"names":["Boolean","window","location","hostname","match","FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","type","onClick","HOME","AuthUserContext","withAuthentication","WithAuthentication","state","authUser","listener","onAuthStateChanged","setState","Provider","value","withAuthorization","condition","WithAuthorization","history","push","compose","withRouter","NavigationAuth","to","ROUTES","pathname","totalQuestions","SignOut","NavigationNonAuth","Navigation","Landing","FormInput","handleChange","label","otherProps","className","onChange","length","CustomButton","children","INITIAL_STATE","username","passwordOne","passwordTwo","error","SignUpFormBase","onSubmit","event","then","set","catch","preventDefault","target","name","isInvalid","placeholder","disabled","message","SignUpLink","SignUpForm","SignUpPage","PasswordForgetFormBase","PasswordForgetLink","PasswordForgetPage","PasswordForgetForm","SignInFormBase","va","lue","SignInForm","SignInPage","PasswordChangeForm","PasswordChange","Admin","Answer","answer","handleAnswerClick","handleEnterPress","tabIndex","onKeyDown","Question","question","answers","map","index","key","JSON","stringify","QuestionList","questions","toString","Quiz","step","score","Modal","modal","praise","points","tally","arr","item","tries","reduce","acc","Results","userAnswers","restartQuiz","triesTotal","oneTry","twoTries","threeTries","fourTries","shuffleQuestions","sort","a","b","Math","random","QUESTION_DATA","correct","QuizApp","getInitialState","e","isCorrect","currentStep","nodeName","parentNode","style","pointerEvents","classList","add","setTimeout","showModal","nextStep","keyCode","restOfQuestions","slice","updateScore","min","QUESTIONS","Result","exact","path","component","LandingPage","HomePage","AccountPage","AdminPage","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59cfd662.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nconst FirebaseContext = React.createContext(null);\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nconst config = {\r\n  apiKey: \"AIzaSyAlLg06Da1C5830nHcNbb8dEW6GSWsweX8\",\r\n  authDomain: \"passgame.firebaseapp.com\",\r\n  databaseURL: \"https://passgame.firebaseio.com\",\r\n  projectId: \"passgame\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"1045674352713\",\r\n  appId: \"1:1045674352713:web:cd961c5110e245d9fd1f98\"\r\n};\r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n  }\r\n\r\n  // *** Auth API ***\r\n\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n\r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n}\r\n\r\nexport default Firebase;","  \r\nimport FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n\r\nexport default Firebase;\r\n\r\nexport { FirebaseContext, withFirebase };","import React from 'react';\r\nimport { withFirebase } from '../Firebase';\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type=\"button\" onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\nexport default withFirebase(SignOutButton);","export const LANDING = '/';\r\nexport const SIGN_UP = '/signup';\r\nexport const SIGN_IN = '/signin';\r\nexport const HOME = '/home';\r\nexport const ACCOUNT = '/account';\r\nexport const PASSWORD_FORGET = '/pw-forget';\r\nexport const ADMIN = '/admin';\r\nexport const ADMIN_DETAILS = '/admin/:id';\r\nexport const QUIZZAPP='/quiz';","import React from 'react';\r\n\r\nconst AuthUserContext = React.createContext(null);\r\n\r\nexport default AuthUserContext;","import React from 'react';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst withAuthentication = Component => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          authUser\r\n            ? this.setState({ authUser })\r\n            : this.setState({ authUser: null });\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport AuthUserContext from './context';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst withAuthorization = condition => Component => {\r\n  class WithAuthorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        authUser => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.SIGN_IN);\r\n          }\r\n        },\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(\r\n    withRouter,\r\n    withFirebase,\r\n  )(WithAuthorization);\r\n};\r\n\r\nexport default withAuthorization;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport SignOutButton from '../SignOut';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nimport { AuthUserContext } from '../Session';\r\n\r\nconst Navigation = () => (\r\n  <div>\r\n    <AuthUserContext.Consumer>\r\n      {authUser =>\r\n        authUser ? <NavigationAuth /> : <NavigationNonAuth />\r\n      }\r\n    </AuthUserContext.Consumer>\r\n  </div>\r\n);\r\n\r\nconst NavigationAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.HOME}>Home</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.ACCOUNT}>Account</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={{\r\n    pathname: \"/quiz\",\r\n    state: { totalQuestions: 5 }\r\n  }}>QuizGame</Link>\r\n    </li>\r\n    <li>\r\n      <SignOutButton />\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <ul>\r\n    <li>\r\n      <Link to={ROUTES.LANDING}>Landing</Link>\r\n    </li>\r\n    <li>\r\n      <Link to={ROUTES.SIGN_IN}>Sign In</Link>\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Landing = () => (\r\n  <div>\r\n    <h1>Landing</h1>\r\n  </div>\r\n);\r\n\r\nexport default Landing;","  \r\nimport React from \"react\";\r\n\r\nimport \"./form-input.styless.scss\";\r\n\r\nconst FormInput = ({ handleChange, label, ...otherProps }) => {\r\n  return (\r\n    <div className=\"group\">\r\n      <input className=\"form-input\" onChange={handleChange} {...otherProps} />\r\n      {label ? (\r\n        <label\r\n          className={`${\r\n            otherProps.value.length ? \"shrink\" : \"\"\r\n          } form-input-label`}\r\n        >\r\n          {label}\r\n        </label>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormInput;","import React from 'react';\r\n\r\nimport './custom-button.styless.scss';\r\n\r\nconst CustomButton = ({ children, ...otherProps }) => (\r\n  <button\r\n  className={`custom-button`}\r\n  {...otherProps}\r\n>\r\n  {children}\r\n</button>\r\n);\r\n\r\nexport default CustomButton;","import React, { Component } from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport FormInput from '../form-input/form-input.component'\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport './sign-up.styles.scss';\r\nconst SignUpPage = () => (\r\n  <div className=\"sign-in-and-sign-up\">\r\n    <h1>SignUp</h1>\r\n    <SignUpForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  username: '',\r\n  email: '',\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { username, email, passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n      .then(authUser => {\r\n        // Create a user in your Firebase realtime database\r\n        this.props.firebase\r\n          .user(authUser.user.uid)\r\n          .set({\r\n            username,\r\n            email,\r\n          })\r\n          .then(() => {\r\n            this.setState({ ...INITIAL_STATE });\r\n            this.props.history.push(ROUTES.HOME);\r\n          })\r\n          .catch(error => {\r\n            this.setState({ error });\r\n          });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      username,\r\n      email,\r\n      passwordOne,\r\n      passwordTwo,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo ||\r\n      passwordOne === '' ||\r\n      email === '' ||\r\n      username === '';\r\n\r\n    return (\r\n      <div className='sign-up'>\r\n         <h2 className='title'>No tengo una cuenta</h2>\r\n         <span>Registrate con tu email y constrasenia</span>\r\n         <form className='sign-up-form' onSubmit={this.onSubmit}>\r\n        <FormInput\r\n          name=\"username\"\r\n          value={username}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Nombres Completos\"\r\n        />\r\n        <FormInput\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <FormInput\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <FormInput\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm Password\"\r\n        />\r\n        <CustomButton disabled={isInvalid} type=\"submit\">\r\n          Registrarse\r\n        </CustomButton>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n      </div>\r\n     \r\n    );\r\n  }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n  <p>\r\n   No tienes una cuenta? <Link to={ROUTES.SIGN_UP}>REGISTRARSE</Link>\r\n  </p>\r\n);\r\nconst SignUpForm = withRouter(withFirebase(SignUpFormBase));\r\nexport default SignUpPage;\r\nexport { SignUpForm, SignUpLink };","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\n\r\nconst PasswordForgetPage = () => (\r\n  <div>\r\n    <h1>PasswordForget</h1>\r\n    <PasswordForgetForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordForgetFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n\r\n    const isInvalid = email === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.PASSWORD_FORGET}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default PasswordForgetPage;\r\n\r\nconst PasswordForgetForm = withFirebase(PasswordForgetFormBase);\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink };","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { SignUpLink } from '../SignUp';\r\nimport { PasswordForgetLink } from '../PasswordForget';\r\nimport { withFirebase } from '../Firebase';\r\nimport * as ROUTES from '../../constants/routes';\r\nimport CustomButton from '../custom-button/custom-button.component'\r\nimport FormInput from '../form-input/form-input.component'\r\nimport './sign-up.styles.scss';\r\nconst SignInPage = () => (\r\n  <div className=\"sign-in-and-sign-up\">\r\n    <SignInForm />\r\n    <PasswordForgetLink />\r\n    <SignUpLink />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: '',\r\n  password: '',\r\n  error: null,\r\n};\r\n\r\nclass SignInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === '' || email === '';\r\n\r\n    return (\r\n      <div className='sign-up'>\r\n      <form onSubmit={this.onSubmit}>\r\n        <FormInput\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email\"\r\n        />\r\n        <FormInput\r\n          name=\"password\"\r\n          va  lue={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <CustomButton disabled={isInvalid} type=\"submit\">\r\n         Ingresar\r\n        </CustomButton>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst SignInForm = compose(\r\n  withRouter,\r\n  withFirebase,\r\n)(SignInFormBase);\r\n\r\nexport default SignInPage;\r\n\r\nexport { SignInForm };","import React from 'react';\r\n\r\nimport { withAuthorization } from '../Session';\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n    <h1>Home Page</h1>\r\n    <p>The Home Page is accessible by every signed in user.</p>\r\n  </div>\r\n);\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(condition)(HomePage);","  \r\nimport React, { Component } from 'react';\r\n\r\nimport { withFirebase } from '../Firebase';\r\n\r\nconst INITIAL_STATE = {\r\n  passwordOne: '',\r\n  passwordTwo: '',\r\n  error: null,\r\n};\r\n\r\nclass PasswordChangeForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { passwordOne } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordUpdate(passwordOne)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch(error => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = event => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { passwordOne, passwordTwo, error } = this.state;\r\n\r\n    const isInvalid =\r\n      passwordOne !== passwordTwo || passwordOne === '';\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"passwordOne\"\r\n          value={passwordOne}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n        />\r\n        <input\r\n          name=\"passwordTwo\"\r\n          value={passwordTwo}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Confirm New Password\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withFirebase(PasswordChangeForm);","import React from 'react';\r\n\r\nimport { AuthUserContext } from '../Session';\r\nimport { PasswordForgetForm } from '../PasswordForget';\r\nimport PasswordChangeForm from '../PasswordChange';\r\nimport { withAuthorization } from '../Session';\r\n\r\nconst AccountPage = () => (\r\n  <AuthUserContext.Consumer>\r\n    {authUser => (\r\n      <div>\r\n        <h1>Account: {authUser.email}</h1>\r\n        <PasswordForgetForm />\r\n        <PasswordChangeForm />\r\n      </div>\r\n    )}\r\n  </AuthUserContext.Consumer>\r\n);\r\n\r\nconst authCondition = authUser => !!authUser;\r\n\r\nexport default withAuthorization(authCondition)(AccountPage);","import React from 'react';\r\n\r\nconst Admin = () => (\r\n  <div>\r\n    <h1>Admin</h1>\r\n  </div>\r\n);\r\n\r\nexport default Admin;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Answer = ({ answer, handleAnswerClick, handleEnterPress }) => {\r\n  return (\r\n    <li\r\n      className=\"question-answer\"\r\n      tabIndex=\"0\"\r\n      onClick={handleAnswerClick}\r\n      onKeyDown={handleEnterPress}\r\n    >\r\n      {answer}\r\n    </li>\r\n  );\r\n}\r\n\r\nAnswer.propTypes = {\r\n  answer: PropTypes.element.isRequired,\r\n  handleAnswerClick: PropTypes.func.isRequired,\r\n  handleEnterPress: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Answer;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Answer from './Answer';\r\n\r\nconst Question = ({ question, answers, handleAnswerClick, handleEnterPress }) => {\r\n  return (\r\n    <li className=\"question\">\r\n      <h2 className=\"question-title\" tabIndex=\"0\">\r\n        {question}\r\n      </h2>\r\n      <ul className=\"question-answers\" tabIndex=\"-1\">\r\n        {answers.map((answer, index) => {\r\n          return (\r\n            <Answer\r\n              key={JSON.stringify(answer.props.children)}\r\n              answer={answer}\r\n              handleAnswerClick={handleAnswerClick(index)}\r\n              handleEnterPress={handleEnterPress(index)}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    </li>\r\n  );\r\n}\r\n\r\nQuestion.propTypes = {\r\n  question: PropTypes.element.isRequired,\r\n  answers: PropTypes.array.isRequired,\r\n  handleAnswerClick: PropTypes.func.isRequired,\r\n  handleEnterPress: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Question;","import React from 'react';\r\nimport Question from './Question';\r\n\r\nconst QuestionList = ({ questions, handleAnswerClick, handleEnterPress }) => {\r\n  return (\r\n    <ul className=\"question-list\">\r\n      {questions.map(question => {\r\n        return (\r\n          <Question\r\n            key={question.question.props.children.toString()}\r\n            question={question.question}\r\n            answers={question.answers}\r\n            handleAnswerClick={handleAnswerClick}\r\n            handleEnterPress={handleEnterPress}\r\n          />\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\nexport default QuestionList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport QuestionList from './QuestionList';\r\n\r\nconst Quiz = ({ step, questions, totalQuestions, score, handleAnswerClick, handleEnterPress }) => {\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <header>\r\n        <div className=\"question-count\">\r\n          <h2>Pregunta</h2>\r\n          <div className=\"question-number\">{step}</div>\r\n          <div className=\"description\">de <span>{totalQuestions}</span></div>\r\n        </div>\r\n        <h1>Security Trivia</h1>\r\n        <div className=\"score-container\">\r\n          <h2>Puntaje</h2>\r\n          <div className=\"score\">{score}</div>\r\n          <div className=\"description\">puntos</div>\r\n        </div>\r\n      </header>\r\n\r\n      <div className=\"questions\">\r\n        <QuestionList\r\n          questions={questions}\r\n          handleAnswerClick={handleAnswerClick}\r\n          handleEnterPress={handleEnterPress}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nQuiz.propTypes = {\r\n  step: PropTypes.number.isRequired,\r\n  questions: PropTypes.array.isRequired,\r\n  totalQuestions: PropTypes.number.isRequired,\r\n  score: PropTypes.number.isRequired,\r\n  handleAnswerClick: PropTypes.func.isRequired,\r\n  handleEnterPress: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Quiz;","\r\nimport React from 'react';\r\n// eslint-disable-next-line\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Modal = ({ modal: { state, praise, points } }) => {\r\n  return (\r\n    <div className={'correct-modal' + (state === 'show' ? ' modal-enter' : '')}>\r\n      <div className=\"praise\">{praise}</div>\r\n      <div className=\"points\">{points}</div>\r\n    </div>\r\n  );\r\n};\r\nexport default Modal;","const tally = arr => {\r\n    return arr.map(item => {\r\n      return item.tries;\r\n    }).reduce((acc, item) => {\r\n      acc[item] = (acc[item] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n  };\r\n  \r\n  export default tally;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport tally from '../../helpers/tally';\r\n\r\nconst Results = ({ userAnswers, score, restartQuiz }) => {\r\n  const triesTotal = tally(userAnswers);\r\n  const oneTry = triesTotal[1] && <div><strong>{triesTotal[1]}</strong> en el primer intento.</div>;\r\n  const twoTries = triesTotal[2] && <div><strong>{triesTotal[2]}</strong> en el segundo intento.</div>;\r\n  const threeTries = triesTotal[3] && <div><strong>{triesTotal[3]}</strong>en el tercer intento.</div>;\r\n  const fourTries = triesTotal[4] && <div><strong>{triesTotal[4]}</strong> en el cuarto intento.</div>;\r\n  \r\n  return (\r\n    <div className=\"results-container\">\r\n      <h2>Resultados</h2>\r\n      <div>Tu respondiste...</div>\r\n      {oneTry}\r\n      {twoTries}\r\n      {threeTries}\r\n      {fourTries}\r\n      <div className=\"results-total\">Tu puntaje total es <strong>{score}</strong>.</div>\r\n      <a onClick={restartQuiz}>Volver a jugar</a>\r\n    </div>\r\n  );\r\n}\r\n\r\nResults.propTypes = {\r\n  userAnswers: PropTypes.array.isRequired,\r\n  score: PropTypes.number.isRequired,\r\n  restartQuiz: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Results;","const shuffleQuestions = (arr) => {\r\n    return arr.sort((a,b) => Math.random() < .5 ? 1 : -1);\r\n  };\r\n  \r\n  export default shuffleQuestions;","import React from 'react';\r\n\r\nconst QUESTION_DATA = [\r\n  {\r\n    question: <span>¿Usas en tu contraseña palabras que aparecen en el diccionario?</span>,\r\n    answers: [\r\n      <span>Sí, porque son fáciles de recordar.</span>,\r\n      <span>Sí, pero en un idioma distinto al mío.</span>,\r\n      <span>Sí, pero escojo las palabras más difíciles.</span>,\r\n      <span>No.</span>\r\n    ],\r\n    correct: 3\r\n  },\r\n  {\r\n    question: <span>¿Por qué muchas personas escogen “qwerty” como clave de acceso?</span>,\r\n    answers: [\r\n      <span>Por ser una secuencia del teclado fácil de recordar.</span>,\r\n      <span>Por pensar que a nadie más se le ocurriría una idea tan original.</span>,\r\n      <span>Todas las anteriores. </span>,\r\n      <span>Por negligencia para crear una contraseña segura </span>\r\n    ],\r\n    correct: 2\r\n  },\r\n  {\r\n    question: <span>¿Cuál de estas es una contraseña segura?</span>,\r\n    answers: [\r\n      <span>123456789.</span>,\r\n      <span>Contraseña.</span>,\r\n      <span>MgelFdLdFee2015.</span>,\r\n      <span>Facebook123.</span>\r\n    ],\r\n    correct: 2\r\n  },\r\n  {\r\n    question: <span>¿Cuál es el mejor lugar para guardar tus contraseñas?</span>,\r\n    answers: [\r\n      <span>Una libreta de notas al lado del computador en la oficina.</span>,\r\n      <span>Un archivo de texto compartido solo con la familia.</span>,\r\n      <span>Apuntadas en papeles autoadhesivos cerca del teléfono</span>,\r\n      <span>Ninguna de las anteriores.</span>\r\n    ],\r\n    correct: 3\r\n  },\r\n  {\r\n    question: <span>¿Qué puedes hacer para proteger tus contraseñas?</span>,\r\n    answers: [\r\n      <span>Enviarlas por correo electrónico.</span>,\r\n      <span>Acceder a tus cuentas desde hoteles, bibliotecas o cibercafés.</span>,\r\n      <span>No mencionarlas en chats o redes sociales.</span>,\r\n      <span>Conservar las que vienen predeterminadas en las aplicaciones.</span>\r\n    ],\r\n    correct: 2\r\n  },\r\n  {\r\n    question: <span>La mejor clave secreta:</span>,\r\n    answers: [\r\n      <span>Tiene secuencias con más de 8 caracteres.</span>,\r\n      <span>Intercala símbolos entre las letras y los números.</span>,\r\n      <span>No usa ni letras ni números consecutivos.</span>,\r\n      <span>Todas las anteriores.</span>\r\n    ],\r\n    correct: 3\r\n  },\r\n  {\r\n    question: <span>Además de crear unas difíciles de adivinar ¿qué puedes hacer para proteger tus contraseñas?</span>,\r\n    answers: [\r\n      <span>Evitar el acceso a tus cuentas desde redes de conexión públicas.</span>,\r\n      <span>No descargar archivos de origen desconocido en tu computador.</span>,\r\n      <span>Cerrar siempre las sesiones (log out) de tus aplicaciones.</span>,\r\n      <span>Todas las anteriores.</span>\r\n    ],\r\n    correct: 3\r\n  },\r\n  {\r\n    question: <span>¿Qué debe reunir una contraseña segura?</span>,\r\n    answers: [\r\n      <span>Fecha de nacimiento, nombres de mascotas, película de moda.</span>,\r\n      <span>Número del documento de identidad con números de teléfono.</span>,\r\n      <span>Una combinación de mayúsculas, minúsculas, números y símbolos.</span>,\r\n      <span>Ninguna de las anteriores.</span>\r\n    ],\r\n    correct: 2\r\n  }\r\n];\r\n\r\nexport default QUESTION_DATA;","import React, { Fragment, Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Quiz from './Quiz';\r\nimport Modal from './Modal';\r\nimport Results from './Result';\r\nimport shuffleQuestions from '../../helpers/shuflleQuestions';\r\nimport QUESTION_DATA from '../../data/quiz-data';\r\nimport { withAuthorization } from '../Session';\r\n\r\nclass QuizApp extends Component {\r\n  state = {\r\n    ...this.getInitialState(this.props.location.state.totalQuestions)\r\n  };\r\n\r\n  static propTypes = {\r\n    totalQuestions: PropTypes.number.isRequired\r\n  };\r\n\r\n  getInitialState(totalQuestions) {\r\n    totalQuestions = Math.min(totalQuestions, QUESTION_DATA.length);\r\n    const QUESTIONS = shuffleQuestions(QUESTION_DATA).slice(0, totalQuestions);\r\n\r\n    return {\r\n      questions: QUESTIONS,\r\n      totalQuestions: totalQuestions,\r\n      userAnswers: QUESTIONS.map(() => {\r\n        return {\r\n          tries: 0\r\n        }\r\n      }),\r\n      step: 1,\r\n      score: 0,\r\n      modal: {\r\n        state: 'hide',\r\n        praise: '',\r\n        points: ''\r\n      }\r\n    };\r\n  }\r\n\r\n  handleAnswerClick = (index) => (e) => {\r\n    const { questions, step, userAnswers } = this.state;\r\n    const isCorrect = questions[0].correct === index;\r\n    const currentStep = step - 1;\r\n    const tries = userAnswers[currentStep].tries;\r\n\r\n    if (isCorrect && e.target.nodeName === 'LI') {\r\n      e.target.parentNode.style.pointerEvents = 'none';\r\n\r\n      e.target.classList.add('right');\r\n\r\n      userAnswers[currentStep] = {\r\n        tries: tries + 1\r\n      };\r\n\r\n      this.setState({\r\n        userAnswers: userAnswers\r\n      });\r\n\r\n      setTimeout(() => this.showModal(tries), 750);\r\n\r\n      setTimeout(this.nextStep, 2750);\r\n    }\r\n\r\n    else if (e.target.nodeName === 'LI') {\r\n      e.target.style.pointerEvents = 'none';\r\n      e.target.classList.add('wrong');\r\n\r\n      userAnswers[currentStep] = {\r\n        tries: tries + 1\r\n      };\r\n\r\n      this.setState({\r\n        userAnswers: userAnswers\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEnterPress = (index) => (e) => {\r\n    if (e.keyCode === 13) {\r\n      this.handleAnswerClick(index)(e);\r\n    }\r\n  };\r\n\r\n  showModal = (tries) => {\r\n    let praise;\r\n    let points;\r\n\r\n    switch (tries) {\r\n      case 0: {\r\n        praise = 'primer intento!';\r\n        points = '+10';\r\n        break;\r\n      }\r\n      case 1: {\r\n        praise = 'segundo intento!';\r\n        points = '+5';\r\n        break;\r\n      }\r\n      case 2: {\r\n        praise = 'Correcto!';\r\n        points = '+2';\r\n        break;\r\n      }\r\n      default: {\r\n        praise = 'Correcto!';\r\n        points = '+1';\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      modal: {\r\n        state: 'show',\r\n        praise,\r\n        points\r\n      }\r\n    });\r\n  };\r\n\r\n  nextStep = () => {\r\n    const { questions, userAnswers, step, score } = this.state;\r\n    const restOfQuestions = questions.slice(1);\r\n    const currentStep = step - 1;\r\n    const tries = userAnswers[currentStep].tries;\r\n\r\n    this.setState({\r\n      step: step + 1,\r\n      score: this.updateScore(tries, score),\r\n      questions: restOfQuestions,\r\n      modal: {\r\n        state: 'hide'\r\n      }\r\n    });\r\n  };\r\n\r\n  updateScore(tries, score) {\r\n    switch (tries) {\r\n      case 1: return score + 10;\r\n      case 2: return score + 5;\r\n      case 3: return score + 2;\r\n      default: return score + 1;\r\n    }\r\n  }\r\n\r\n  restartQuiz = () => {\r\n    this.setState({\r\n      ...this.getInitialState(this.props.location.state.totalQuestions)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { step, questions, userAnswers, totalQuestions, score, modal } = this.state;\r\n\r\n    if (step >= totalQuestions + 1) {\r\n      return (\r\n        <Results\r\n          score={score}\r\n          restartQuiz={this.restartQuiz}\r\n          userAnswers={userAnswers}\r\n        />\r\n      );\r\n    } else return (\r\n      <Fragment>\r\n        <Quiz\r\n          step={step}\r\n          questions={questions}\r\n          totalQuestions={totalQuestions}\r\n          score={score}\r\n          handleAnswerClick={this.handleAnswerClick}\r\n          handleEnterPress={this.handleEnterPress}\r\n        />\r\n        { modal.state === 'show' && <Modal modal={modal} /> }\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\nconst condition = authUser => !!authUser;\r\nexport default withAuthorization(condition)(QuizApp);","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Navigation from '../Navigation';\r\nimport LandingPage from '../Landing';\r\nimport SignUpPage from '../SignUp';\r\nimport SignInPage from '../SignIn';\r\nimport PasswordForgetPage from '../PasswordForget';\r\nimport HomePage from '../Home';\r\nimport AccountPage from '../Account';\r\nimport AdminPage from '../Admin';\r\nimport QuizApp from '../QuizGame/QuizApp'\r\nimport * as ROUTES from '../../constants/routes';\r\nimport { withAuthentication } from '../Session';\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n      <Navigation />\r\n\r\n      <hr />\r\n\r\n      <Route exact path={ROUTES.LANDING} component={LandingPage} />\r\n      <Route exact path={ROUTES.SIGN_UP} component={SignUpPage} />\r\n      <Route exact path={ROUTES.SIGN_IN} component={SignInPage} />\r\n      <Route\r\n        exact\r\n        path={ROUTES.PASSWORD_FORGET}\r\n        component={PasswordForgetPage}\r\n      />\r\n      <Route exact path={ROUTES.QUIZZAPP} component={QuizApp } />\r\n      <Route exact path={ROUTES.HOME} component={HomePage} />\r\n      <Route exact path={ROUTES.ACCOUNT} component={AccountPage} />\r\n      <Route exact path={ROUTES.ADMIN} component={AdminPage} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nexport default withAuthentication(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport App from './components/App';\nimport Firebase, { FirebaseContext } from './components/Firebase';\n\nReactDOM.render(\n  <FirebaseContext.Provider value={new Firebase()}>\n    <App />\n  </FirebaseContext.Provider>,\n  document.getElementById('root'),\n);\n// ReactDOM.render(<QuizApp totalQuestions={5} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}